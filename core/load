#!/bin/bash

sandbox::load() {
  local typ=$1
  local version=$2
  local command=$3

  # config::export $PLUGIN_SANDBOX_MOD
  # @TODO
  config::load_file $PLUGIN_SANDBOX_MOD
  export PLUGIN_NAME=$PLUGIN_NAME
  export PLUGIN_VERSION=$PLUGIN_VERSION
  export PLUGIN_DESCRIPTION=$PLUGIN_DESCRIPTION
  

  local sandbox_dir="$PLUGIN_SANDBOX_SANDBOXS_DIR/$typ"
  local sandbox_config=$sandbox_dir/config
  if [ -f "$sandbox_config" ]; then
    config::load_file $sandbox_config
  fi

  # cd $sandbox_dir

  export PLUGIN_SANDBOX_NAME=$typ
  export PLUGIN_SANDBOX_VERSION=$version

  if [ -n "$PLUGIN_SANDBOX_VERSION" ] && [ "$PLUGIN_SANDBOX_VERSION" != "latest" ]; then
    export PLUGIN_SANDBOX_IMAGE_VERSION=${PLUGIN_SANDBOX_VERSION}
  fi

  export PLUGIN_SANDBOX_IMAGE=${PLUGIN_SANDBOX_IMAGE_NAME}:${PLUGIN_SANDBOX_IMAGE_VERSION}
  export PLUGIN_SANDBOX_COMMAND=${command:-$PLUGIN_SANDBOX_COMMAND}
  export PLUGIN_SANDBOX_RUNNER_ID=$(os::uuid)
  export PLUGIN_SANDBOX_RUNNER_CONTAINER="sandbox_${typ}_${PLUGIN_SANDBOX_RUNNER_ID}"

  # check image is exist
  if [ "$(sandbox::is_image_exists $PLUGIN_SANDBOX_IMAGE_NAME $PLUGIN_SANDBOX_IMAGE_VERSION)" = "false" ]; then
    log::error "[sandbox::load] sandbox (${PLUGIN_SANDBOX_NAME}) image ($PLUGIN_SANDBOX_IMAGE) not found"
    exit 1
  fi
}

export -f sandbox::load
