#!/bin/bash

help() {
  echo "Create a sandbox for testing"
  echo ""
  echo "Usage:"
  echo "  zmicro sandbox create [options...] <type>"
  echo ""
  echo "Options:"
  echo "  -s,--shell       Specify custom shell, default: sh"
  echo "  -i,--image       Specify custom docker image, env: PLUGIN_SANDBOX_IMAGE"
  echo ""
  echo "    type - sandbox type, such as: nodejs, or nodejs:v14"
  echo ""
  echo "Examples:"
  echo "  zmicro sandbox create nodejs"
  echo "  zmicro sandbox create nodejs:v14"
  echo "  zmicro sandbox create go"
  echo "  zmicro sandbox create python"
  echo "  zmicro sandbox create php"
  echo "  zmicro sandbox create java"
  echo "  zmicro sandbox create ruby"
  echo "  zmicro sandbox create perl"
  echo "  zmicro sandbox create bash"
  echo "  zmicro sandbox create zmicro"
}

core() {
  if [ "$1" = "" ] || [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    help
    exit 0
  fi

  local typ=$1
  if [ -z "$typ" ]; then
    log::error "type is required"
    exit 1
  fi

  local shell="sh"
  # local image=""
  
  while [[ $# -gt 0 ]]; do
    local key=$1
    local value=$2
    case $key in
    -h | --help)
      help
      exit 0
      ;;
    -s | --shell)
      shell=$value
      shift
      shift
      ;;
    -i | --image)
      # image=$value
      export PLUGIN_SANDBOX_IMAGE=$value
      shift
      shift
      ;;
    *)
      if [ "$(string::match $key ^-)" = "true" ]; then
        echo "ERROR: unknown parameter \"$key\""
        help
        exit 1
      fi

      shift
      ;;
    esac
  done

  sandbox::create "$typ" "$shell" "$image"
}

run() {
  core "$@"
}

run "$@"
